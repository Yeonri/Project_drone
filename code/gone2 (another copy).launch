<?xml version="1.0" encoding="UTF-8"?>
<launch>

  <!-- Mapping Configuration -->
  <arg name="scan_topic"  default="/laser/scan" />
  <arg name="laser_topic"  default="/laser/scan" />
  <arg name="odom_topic"  default="odom" />
  <arg name="odom_frame_id" default="odom"/>
  <arg name="base_frame_id" default="base_link"/>
  <arg name="global_frame_id" default="map"/>
  
  <param name="robot_description"
    textfile="$(find drone_mapping )/config/backpack_2d.urdf" /> 

  <node name="robot_state_publisher" pkg="robot_state_publisher"
    type="robot_state_publisher" />
    
  <node pkg="tf" type="static_transform_publisher" name="base_link_rplidar_link" args="0 0 0 0 0 0 base_link rplidar_link 100"/> 
  
  <node pkg="tf" type="static_transform_publisher" name="base_foot_base_link" args="0 0 0 0 0 0 base_footprint base_link 100"/> 
  
  <node pkg="tf" type="static_transform_publisher" name="odom_base_link" args="0 0 0 0 0 0 odom base_footprint 100"/>
  
  <node pkg="tf" type="static_transform_publisher" name="map_odom" args="0 0 0 0 0 0 map odom 100"/>
  
  <!-- Cartographer Node for Mapping -->
  <node name="cartographer_node" pkg="cartographer_ros"
        type="cartographer_node" args="
        -configuration_directory $(find drone_mapping)/config
        -configuration_basename drone_cartographer.lua"
        output="screen">
    <remap from="scan" to="/laser/scan" />
  </node>
  <node name="cartographer_occupancy_grid_node" pkg="cartographer_ros"
        type="cartographer_occupancy_grid_node" args="-resolution 0.2" />

  <!-- Move Base Configuration for Navigation -->

  <!-- RViz visualization for navigation Delete-->

  <arg name="custom_param_file" default="$(find drone_navigation)/config/dummy.yaml"/>

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find drone_navigation)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find drone_navigation)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find drone_navigation)/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find drone_navigation)/config/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find drone_navigation)/config/dwa_local_planner_params.yaml" command="load" />
    <rosparam file="$(find drone_navigation)/config/move_base_params.yaml" command="load" />
    <rosparam file="$(find drone_navigation)/config/global_planner_params.yaml" command="load" />
    <rosparam file="$(find drone_navigation)/config/navfn_global_planner_params.yaml" command="load" />
    <rosparam file="$(arg custom_param_file)" command="load" />
    
    <!-- reset frame_id parameters using user input data -->
    <param name="global_costmap/global_frame" value="$(arg global_frame_id)"/>
    <param name="global_costmap/robot_base_frame" value="$(arg base_frame_id)"/>
    <param name="local_costmap/global_frame" value="$(arg odom_frame_id)"/>
    <param name="local_costmap/robot_base_frame" value="$(arg base_frame_id)"/>
    <param name="DWAPlannerROS/global_frame_id" value="$(arg odom_frame_id)"/>

    <param name="global_costmap/laser_scan_sensor/sensor_frame" value="$(arg base_frame_id)"/>
    <param name="global_costmap/laser_scan_sensor/topic" value="/laser/scan"/>    
    <param name="local_costmap/laser_scan_sensor/sensor_frame" value="$(arg base_frame_id)"/>
    <param name="local_costmap/laser_scan_sensor/topic" value="/$(arg laser_topic)"/>
    <param name="local_costmap/obstacle_layer/laser_scan_sensor/topic" value="/$(arg laser_topic)"/>
    
  </node>

  <!-- RViz visualization for mapping -->
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find drone_mapping)/rviz/cartographer_mapping.rviz" />

</launch>

